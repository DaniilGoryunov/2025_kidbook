from gigachat import GigaChat
from langchain_core.prompts import PromptTemplate
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
animation_dir = Path("animation_concepts")
animation_dir.mkdir(parents=True, exist_ok=True)

# –°–ø–∏—Å–æ–∫ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π
concepts = [
    "–ú—É–ª—å—Ç—Ñ–∏–ª—å–º", "–ê–Ω–∏–º–∞—Ü–∏—è", "–°–ø—Ä–∞–π—Ç", "–†–µ–Ω–¥–µ—Ä", "–†–∞—Å–∫–∞–¥—Ä–æ–≤–∫–∞",
    "–§—Ä–µ–π–º—Ä–µ–π—Ç", "–ú–æ—É—à–Ω-–¥–∏–∑–∞–π–Ω", "–°–∫–µ–ª–µ—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è", "–°—Ç–æ–ø-–º–æ—É—à–Ω",
    "–¢–≤–∏–Ω–∏–Ω–≥", "–ê–Ω–∏–º–∞—Ç–∏–∫", "–§–æ–ª–∏", "Lip Sync", "CGI", "–ê–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–∏–∫–ª"
]

def create_markdown_file(filename, content):
    """–°–æ–∑–¥–∞–µ—Ç MD-—Ñ–∞–π–ª —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"""
    filepath = animation_dir / f"{filename}.md"
    filepath.write_text(content, encoding="utf-8")
    print(f"–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {filepath}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GigaChat
api_code = ''
llm = GigaChat(credentials=api_code, verify_ssl_certs=False, model='GigaChat-Pro')

# –ü—Ä–æ–º–ø—Ç —Å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏
template = """
–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å —Ç–∞–ª–∞–Ω—Ç–æ–º –æ–±—ä—è—Å–Ω—è—Ç—å —Å–ª–æ–∂–Ω–æ–µ –¥–µ—Ç—è–º 10-12 –ª–µ—Ç. –°–æ–∑–¥–∞–π —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ 
–ø–æ–Ω—è—Ç–∏—è –∏–∑ –º–∏—Ä–∞ –∞–Ω–∏–º–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—è:

1. üî• –Ø—Ä–∫–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è ("–≠—Ç–æ –∫–∞–∫...")
2. üé¨ –ü—Ä–∏–º–µ—Ä—ã –∏–∑ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤
3. ü§π –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã ("–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ...")
4. üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
5. üîó –ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –ø–æ–Ω—è—Ç–∏—è

–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –§–æ—Ä–º–∞—Ç: Markdown
- –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:
  ## –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (—Å —ç–º–æ–¥–∑–∏)
  ## –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? 
  ## –ü—Ä–∏–º–µ—Ä –∏–∑ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–∞
  ## –ü–æ–ø—Ä–æ–±—É–π —Å–∞–º! (—Å–æ–≤–µ—Ç –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞)
- –ò—Å–ø–æ–ª—å–∑—É–π –º–∏–Ω–∏–º—É–º 5 —ç–º–æ–¥–∑–∏
- –°–≤—è–∂–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–Ω—è—Ç–∏—è–º–∏: {linked_concepts}

–ü–æ–Ω—è—Ç–∏–µ: {query}
"""

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–Ω—è—Ç–∏—è
for concept in concepts:
    # –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –ø–æ–Ω—è—Ç–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫
    linked = [c for c in concepts if c != concept]
    prompt = PromptTemplate(
        input_variables=['query', 'linked_concepts'],
        template=template
    ).format(
        query=concept,
        linked_concepts=", ".join(f'"{c}"' for c in linked)
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π
    if concept == "–ú—É–ª—å—Ç—Ñ–∏–ª—å–º":
        prompt += "\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º—è–Ω–∏ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É 2D –∏ 3D, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏–º–µ—Ä—ã [Disney](^2d^) –∏ [Pixar](^3d^)."
    elif concept == "–°–∫–µ–ª–µ—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è":
        prompt += "\n–ü–æ–∫–∞–∂–∏ –∞–Ω–∞–ª–æ–≥–∏—é —Å –º–∞—Ä–∏–æ–Ω–µ—Ç–∫–æ–π, –≥–¥–µ [–∫–æ—Å—Ç–∏](^rigging^) - —ç—Ç–æ –Ω–∏—Ç–∫–∏ –∫—É–∫–ª–æ–≤–æ–¥–∞."
    
    response = llm.chat(prompt)
    create_markdown_file(concept, response.choices[0].message.content)